# -*- coding: utf-8 -*-
"""Cash Flow Statement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/101U190hPHWGCvTd3zd5c9WXYsne4BIgP
"""

import pandas as pd
import numpy as np
import io

from google.colab import files

uploaded = files.upload()

file_name = "FinData.xlsx"

GL = pd.read_excel('FinData.xlsx', sheet_name='GL')
COA = pd.read_excel('FinData.xlsx', sheet_name='COA')
Calendar = pd.read_excel('FinData.xlsx', sheet_name='Calendar')
Territory = pd.read_excel('FinData.xlsx', sheet_name='Territory')
CF = pd.read_excel('FinData.xlsx', sheet_name='CashFlow_St')

GL_Master = pd.merge(GL, COA, on='Account_key', how='left').merge(Calendar, on='Date', how='left').merge(Territory, on='Territory_key', how='left')

CF_Master = pd.merge(CF, GL_Master, on='Account_key', how='left')

Closing_balance = CF_Master[CF_Master['ValueType'] == 'Closing_balance'].pivot_table(values='Amount', columns='Year', aggfunc='sum').cumsum(axis=1)

Opening_balance = Closing_balance - CF_Master[CF_Master['ValueType'] == 'Closing_balance'].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Profit_before_tax = CF_Master[CF_Master['Subtype'] == 'Profit before tax'].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Interest_expense = CF_Master[CF_Master['Subtype'] == 'Interest Expense'].pivot_table(values='Amount', columns='Year', aggfunc='sum')*-1

Non_Operating = CF_Master[CF_Master['Subtype'] == 'Non-Operating'].pivot_table(values='Amount', columns='Year', aggfunc='sum') *-1

Non_Cash_Items = CF_Master[CF_Master['Subtype'] == 'Non-Cash items'].pivot_table(values='Amount', columns='Year', aggfunc='sum') *-1

Receivables = CF_Master[CF_Master['Account_x'] == 'Receivables'].pivot_table(values='Amount', columns='Year', aggfunc='sum') *-1

Inventory = CF_Master[CF_Master['Account_x'] == 'Inventory'].pivot_table(values='Amount', columns='Year', aggfunc='sum') *-1

Payables = CF_Master[CF_Master['Account_x'] == 'Payables'].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Working_Capital = Receivables + Inventory + Payables

Interest_paid = CF_Master[(CF_Master['Subtype'] == 'Interest Paid') & (CF_Master['Amount'] < 0)].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Tax_paid = CF_Master[CF_Master['Subtype'] == 'Tax paid'].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Cash_paid_on_purchase_of_PPE = CF_Master[(CF_Master['Subtype'] == 'Purchase of Non-Current Assets') & (CF_Master['Amount'] > 0)].pivot_table(values='Amount', columns='Year', aggfunc='sum') * -1

Cash_received_on_sale_of_PPE = CF_Master[(CF_Master['Subtype'] == 'Sale of Non-Current Assets') & (CF_Master['Amount'] < 0)].pivot_table(values='Amount', columns='Year', aggfunc='sum') * -1

Cash_received_on_sale_of_PPE

Investments = CF_Master[(CF_Master['Subtype'] == 'Investments') & (CF_Master['Amount'] > 0)].pivot_table(values='Amount', columns='Year', aggfunc='sum') * -1

Interest_received = CF_Master[(CF_Master['Subtype'] == 'Interest received')].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Dividends_received = CF_Master[(CF_Master['Subtype'] == 'Dividends received')].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Proceeds_from_the_issuance_of_Share_Capital = CF_Master[(CF_Master['Subtype'] == 'Proceeds from the issuance of Share Capital')].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Proceeds_from_long_term_borrowings = CF_Master[(CF_Master['Subtype'] == 'Proceeds from long term borrowings') &  (CF_Master['Amount'] > 0) ].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Repayment_of_Long_Term_Loan =  CF_Master[(CF_Master['Subtype'] == 'Proceeds from long term borrowings') &  (CF_Master['Amount'] < 0) ].pivot_table(values='Amount', columns='Year', aggfunc='sum')

Dividends_paid = CF_Master[(CF_Master['Subtype'] == 'Dividends paid') &  (CF_Master['Amount'] < 0) ].pivot_table(values='Amount', columns='Year', aggfunc='sum')

dfs_to_concat = [Opening_balance, Profit_before_tax, Interest_expense, Non_Operating, Non_Cash_Items, Working_Capital, Interest_paid, Tax_paid, Cash_paid_on_purchase_of_PPE, Cash_received_on_sale_of_PPE, Investments, Interest_received, Dividends_received, Proceeds_from_the_issuance_of_Share_Capital, Proceeds_from_long_term_borrowings, Repayment_of_Long_Term_Loan, Dividends_paid]

# Concatenate DataFrames vertically
merged_df = pd.concat(dfs_to_concat, axis=0, ignore_index=True)

# Display the result
print(merged_df)

#Notes for Azfar
#1 Cash flow Statement is complete, but row titles are not appearing.
#2 Since I have defined each row separately, I can't drill down the rows to show more items.